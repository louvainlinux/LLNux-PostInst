#!/bin/bash
# Script which should help users install / tweak some stuff immediately
# after installing Ubuntu 14.04 32bit and 64bit.
#
# The script comes with no warranty. The author is not responsible if
# your system breaks.
#
#####################
#
#  Copyright (C) 2010 Alin Andrei, http://www.webupd8.org
#  Copyright 2011-2012 Matthieu Baerts <matttbe@gmail.com>
#  
#  This program is free software; you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation; either version 3 of the License, or
#  (at your option) any later version.
#  
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#  
#  You should have received a copy of the GNU General Public License
#  along with this program; if not, write to the Free Software
#  Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
#  MA 02110-1301, USA.
#
#####################
#Credits:
#based on the idea of: http://czytelnia.ubuntu.pl/index.php/2009/11/03/skrypt-ulatwiajacy-konfiguracje-ubuntu-9-10-karmic-koala/, but Ubuntu Start is a completely re-written script with lots of new features.


MIRROR_ADDR="http://192.168.1.2/"
# WEBPAGE_END="http://www.louvainlinux.be/statistiques-install-party-q2/"
TRUETYPEPATH="/usr/share/fonts/truetype/"
ROOT_UID=0
DIR=$(pwd)


#running gconf-tool2/dconf with "sudo" fails to set the options for the current user so this tweak makes it possible to run sudo for gconf-tool2 and change the setting for the current user, not the root user
ON_USER=$(echo ~ | awk -F'/' '{ print $1 $2 $3 }' | sed 's/home//g')
export $(grep -v "^#" /home/$ON_USER/.dbus/session-bus/`cat /var/lib/dbus/machine-id`-0)
if sudo -u $ON_USER test -z "$DBUS_SESSION_BUS_ADDRESS" ; then
	eval `sudo -u $ON_USER dbus-launch --sh-syntax --exit-with-session`
fi

DISTRIB=$(grep -e DISTRIB_CODENAME /etc/lsb-release | cut -d= -f2)
DISTRIBNUM=$(grep -e DISTRIB_RELEASE= /etc/lsb-release | cut -d= -f2 | cut -d. -f1)
DISTRIBNUM2=$(grep -e DISTRIB_RELEASE= /etc/lsb-release | cut -d= -f2 | cut -d. -f2)

# warning ##################### MIRROR
if test "$DISTRIB" = "trusty"; then
	MIRROR_GOOD_DISTRIB=TRUE
else
	echo "WARNING: This script has been made for Ubuntu Trusty 14.04! "
	/usr/bin/zenity --warning --title="WARNING" --text="You are not using Ubuntu 14.04 Trusty Thar"
	MIRROR_GOOD_DISTRIB=FALSE
fi

#check if the user is running 32 or 64bit
if [ "i686" = `uname -m` ]; then
	echo "Using `cat /etc/issue.net` x86 (i386) - [ OK ]"
	arch=i386
elif [ "x86_64" = `uname -m` ]; then
	echo "Using `cat /etc/issue.net` x68_64 (amd64) - [ OK ]"
	arch=amd64
else
	/usr/bin/zenity --warning --title="Architecture not supported" --text="Your architecture is not supported"
	echo You are not using `cat /etc/issue.net` 32 or 64bits, exiting
	exit
fi

# needs to be run with sudo
if [ "$UID" -ne "$ROOT_UID" ];
	then
	echo ""
	echo "Vous devez lancer ce script avec les droits de l'administrateur."
	echo ""
	echo "Tentative de relancement."
	echo "Merci d'entrer votre mot de passe ci-dessous (les caractères tapés seront invisibles, il n'y aura pas d'astérisque pour des raisons de sécurité)"
	echo ""
	sudo "./`basename $0`"
	exit
fi

# check if there are applications running which can interfere with the script
sleep 1
for lock in synaptic update-manager software-center apt-get dpkg aptitude
do
if ps -U root -u root u | grep $lock | grep -v grep > /dev/null;
	then
	echo "Installation won't work. Please close $lock first then try again.";
	/usr/bin/zenity --warning --title="Erreur" --text="L'installation ne fonctionne pas. Fermez $lock et essayez à nouveau."
	exit
fi
done

# force port 80, the default port (11371) is maybe blocked
function addppakey()
{
	if test -f "$DIR/keys.gpg"; then
		sudo apt-key adv --import "$DIR/keys.gpg"
	else
		# Author: Dominic Evans https://launchpad.net/~oldman
		# License: LGPL v2
		echo '#!/bin/sh
		echo "Hit your password (its invisible by security ;) )! "
		sudo -v
		echo "Please wait! "
		for APT in `find /etc/apt/ -name *.list`; do
			grep -o "^deb http://ppa.launchpad.net/[a-z0-9\-]\+/[a-z0-9\-]\+" $APT | while read ENTRY ; do
			# work out the referenced user and their ppa
			USERPPA=`echo $ENTRY | cut -d/ -f4`
			PPA=`echo $ENTRY | cut -d/ -f5`
			# some legacy PPAs say "ubuntu" when they really mean "ppa", fix that up
			if [ "ubuntu" = "$PPA" ]
			then
				PPA=ppa
			fi
			# scrape the ppa page to get the keyid
			KEYID=`wget -q --no-check-certificate https://launchpad.net/~$USERPPA/+archive/$PPA -O- | grep -o "1024R/[A-Z0-9]\+" | cut -d/ -f2`
			sudo apt-key adv --list-keys $KEYID >/dev/null 2>&1
			if [ $? -ne 0 ]
			then
				echo "Grabbing key $KEYID for archive $PPA by ~$USERPPA"
				sudo apt-key adv --recv-keys --keyserver keyserver.ubuntu.com:80 $KEYID
			else
				echo "Already have key $KEYID for archive $PPA by ~$USERPPA"
			fi
			done
		done
		sudo apt-key adv --recv-keys --keyserver keyserver.ubuntu.com:80 5044912E #dropbox key
		sudo apt-key adv --recv-keys --keyserver keyserver.ubuntu.com:80 CFD74EDE # me key' > /home/$ON_USER/ubuntu-keyserver.sh
		chmod +x /home/$ON_USER/ubuntu-keyserver.sh
		chown $ON_USER /home/$ON_USER/ubuntu-keyserver.sh

		if [ "$KEYSERVER_FAIL" != "" ]; then
			/usr/bin/zenity --info --text="Le serveur de clé n'est pas disponible. Merci de lancer le script 'ubuntu-keyserver.sh' disponible dans votre répertoire Home en double cliquant dessus plus tard."
		else
			sh /home/$ON_USER/ubuntu-keyserver.sh
			rm -f /home/$ON_USER/ubuntu-keyserver.sh
		fi
	fi
}



function addallkey()
{
	if test -f "$DIR/keys.gpg"; then
		sudo apt-key adv --import "$DIR/keys.gpg"
	else
		#addkey
		wget -q http://repository.glx-dock.org/cairo-dock.gpg -O- | sudo apt-key add -
		# wget -q http://fr.packages.medibuntu.org/medibuntu-key.gpg -O- | sudo apt-key add -
		wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
		addppakey
	fi
}


#check if the user has an active internet connection
function testConnection()
{
	# ping can be blocked -> wget
	testconnection=`wget --tries=3 --timeout=15 www.google.com -O /tmp/testinternet &>/dev/null 2>&1`
	if [ $? -gt 0 ]; then
		echo	"You are not connected to the Internet. Please check your Internet connection and try again."
		/usr/bin/zenity --info --text="<b>Erreur:</b> Vous n'êtes pas connecté à Internet mais vous avez choisi une option nécessitant une connexion à Internet. Merci de corriger votre connexion à Internet et essayer à nouveau."
	else
		echo Internet connection - ok
	fi
}

function testKeyServer()
{
	if test -f "$DIR/keys.gpg"; then
		sudo apt-key adv --import "$DIR/keys.gpg"
	else
		# keyserver.ubuntu.com -> test
		# normalement sur le port 11371
		testconnection=`wget --tries=2 --timeout=5 "http://keyserver.ubuntu.com:80/pks/lookup?op=get&search=0x60D11217247D1CFF" -O /tmp/testinternet2 &>/dev/null 2>&1`
		if [ $? -gt 0 ]; then
			echo	"The keyserver isn't available, please double-click on 'ubuntu-keyserver.sh' script later"
			KEYSERVER_FAIL=1
		else
			echo "Keyserver connection - ok"
		fi
		addallkey
	fi
}

## n'ajoute que le dépôt (car le port pour communiquer avec le serveur de clé
##  peut être bloqué dans un réseau universitaire)
function AddMeApt ()
{
	myRepo=`echo "$1" | cut -d# -f1`
	if [ "$MIRROR" = "yes" ]; then
		SRC_FILE="$DIR/sources_out.list"
		grep "^$myRepo" "$SRC_FILE" > /dev/null
		if [ $? -eq 1 ]; then
			# to not duplicate the repository
			echo "$myRepo" | sudo tee -a "$SRC_FILE"
		fi
	fi
	SRC_FILE="/etc/apt/sources.list"
	myRepo=`echo "$1" | cut -d# -f1`
	grep "^$myRepo" $SRC_FILE > /dev/null
	if [ $? -eq 1 ]; then
		# to not duplicate the repository
		echo "$myRepo" | sudo tee -a $SRC_FILE
	fi
}

function OurMirror ()
{
	if [ "$1" = "up" ]; then
		if test -f "$DIR/keys.gpg"; then
			sudo apt-key adv --import "$DIR/keys.gpg"
		fi
		if test -f "$DIR/sources_local.list"; then
			sudo cp /etc/apt/sources.list /etc/apt/sources.list_ORIGINAL
			sudo cp "$DIR/sources_local.list" /etc/apt/sources.list
		else
			echo "Pas de fichier sources_local.list"
		fi
	elif [ "$1" = "down" ]; then
		if test -f "$DIR/sources_out.list"; then
			sudo cp "$DIR/sources_out.list" /etc/apt/sources.list
		else
			echo "Pas de fichier /etc/apt/sources_out.list"
		fi
	elif [ "$1" = "original" ]; then
		if test -f "/etc/apt/sources.list_ORIGINAL"; then
			sudo cp /etc/apt/sources.list_ORIGINAL /etc/apt/sources.list
		else
			echo "Pas de fichier /etc/apt/sources.list_ORIGINAL"
		fi
	fi
}

# menu, buttons
# - snap
# + dbus, scale, expo, wobbly
function custom_compiz ()
{
	COMPIZ_FLAT_FILE="/home/$ON_USER/.config/compiz-1/compizconfig/Default.ini"
	COMPIZ_GCONF="/apps/compiz-1/general/screen0/options/active_plugins"

	# disable snap (for wobbly)
	if test -d "/home/$ON_USER/.config/compiz-1"; then # compiz >= 0.9
		# plug-ins in double are NO LONGER filtered by Compiz in this version... (and if plugins are in double or wrong, compiz crashes :) )
		# flat file
		if test -f "$COMPIZ_FLAT_FILE"; then
			pluginsFlat=`grep "s0_active_plugins" $COMPIZ_FLAT_FILE`
			if test `echo $pluginsFlat | grep -c snap` -gt 0; then
				pluginsFlatWithoutSnap=`echo $pluginsFlat | sed -e "s/snap;//g"`
				sed -i "/s0_active_plugins/ s/$pluginsFlat/$pluginsFlatWithoutSnap/g" $COMPIZ_FLAT_FILE
			fi
		fi
		# gconf
		plugins=`sudo -u $ON_USER "DBUS_SESSION_BUS_ADDRESS="$DBUS_SESSION_BUS_ADDRESS gconftool-2 -g $COMPIZ_GCONF`
		if test -n "$plugins"; then
			if test `echo $plugins | grep -c snap` -gt 0; then
				pluginsWithoutSnap=`echo $plugins | sed -e "s/snap,//g"`
				sudo -u $ON_USER "DBUS_SESSION_BUS_ADDRESS="$DBUS_SESSION_BUS_ADDRESS gconftool-2 -s $COMPIZ_GCONF --type=list --list-type=string "$pluginsWithoutSnap"
			fi
		fi
	fi

	if test -n "`which gsettings`"; then
	sudo -u $ON_USER "DBUS_SESSION_BUS_ADDRESS="$DBUS_SESSION_BUS_ADDRESS gsettings set org.gnome.desktop.interface buttons-have-icons true 2> /dev/null
	sudo -u $ON_USER "DBUS_SESSION_BUS_ADDRESS="$DBUS_SESSION_BUS_ADDRESS gsettings set org.gnome.desktop.interface menus-have-icons true 2> /dev/null
	fi
	if test -n "`which gconftool-2`"; then  # both gsettings and gconf can be present on the system, so we do both.
		GCONFTOOL_CHECK=1
		sudo -u $ON_USER "DBUS_SESSION_BUS_ADDRESS="$DBUS_SESSION_BUS_ADDRESS gconftool-2 -s '/desktop/gnome/interface/buttons_have_icons' --type bool true
		sudo -u $ON_USER "DBUS_SESSION_BUS_ADDRESS="$DBUS_SESSION_BUS_ADDRESS gconftool-2 -s '/desktop/gnome/interface/menus_have_icons' --type bool true
	fi

	# Enable wobbly, dbus, scale and expo plug-ins in Compiz.
	if test -n "`which compiz`"; then
		if test -d "/home/$ON_USER/.config/compiz"; then # compiz < 0.9
			# flat file
			if test -f "/home/$ON_USER/.config/compiz/compizconfig/Default.ini"; then
				sudo -u $ON_USER sed -i "/as_active_plugins/ s/.*/&;dbus;scale;expo/g" /home/$ON_USER/.config/compiz/compizconfig/Default.ini
			fi
			# gconf
			if test -n "$GCONFTOOL_CHECK"; then
				plugins=`sudo -u $ON_USER "DBUS_SESSION_BUS_ADDRESS="$DBUS_SESSION_BUS_ADDRESS gconftool-2 -g /apps/compiz/general/allscreens/options/active_plugins`
				sudo -u $ON_USER "DBUS_SESSION_BUS_ADDRESS="$DBUS_SESSION_BUS_ADDRESS gconftool-2 -s /apps/compiz/general/allscreens/options/active_plugins --type=list --list-type=string "${plugins:0:${#plugins}-1},dbus,scale,expo]"  # plug-ins in double are filtered by Compiz.
			fi
		fi
		if test -d "/home/$ON_USER/.config/compiz-1"; then # compiz >= 0.9 => we can have compiz and compiz-1
			# plug-ins in double are NO LONGER filtered by Compiz in this version... (and if plugins in double, compiz crashes :) )
			# flat file
			if test -f "/home/$ON_USER/.config/compiz-1/compizconfig/Default.ini"; then
				pluginsFlat=`grep "s0_active_plugins" /home/$ON_USER/.config/compiz-1/compizconfig/Default.ini`
				for i in dbus scale expo wobbly; do
					if test `echo $pluginsFlat | grep -c $i` -eq 0; then
						pluginsFlat="$pluginsFlat""$i;"
						sed -i "/s0_active_plugins/ s/.*/&$i;/g" /home/$ON_USER/.config/compiz-1/compizconfig/Default.ini
					fi
				done
			fi
			# gconf
			if test -n "$GCONFTOOL_CHECK"; then
				plugins=`sudo -u $ON_USER "DBUS_SESSION_BUS_ADDRESS="$DBUS_SESSION_BUS_ADDRESS gconftool-2 -g /apps/compiz-1/general/screen0/options/active_plugins`
				if test -n "$plugins"; then
					for i in dbus scale expo wobbly; do
						if test `echo $plugins | grep -c $i` -eq 0; then
							plugins=${plugins:0:${#plugins}-1},$i]
							sudo -u $ON_USER "DBUS_SESSION_BUS_ADDRESS="$DBUS_SESSION_BUS_ADDRESS gconftool-2 -s /apps/compiz-1/general/screen0/options/active_plugins --type=list --list-type=string "$plugins"
						fi
					done
				else
					plugins="[core,composite,opengl,compiztoolbox,decor,vpswitch,snap,mousepoll,resize,place,move,wall,grid,regex,imgpng,session,gnomecompat,animation,fade,staticswitcher,workarounds,scale,expo,ezoom,dbus,wobbly]"
					sudo -u $ON_USER "DBUS_SESSION_BUS_ADDRESS="$DBUS_SESSION_BUS_ADDRESS gconftool-2 -s /apps/compiz-1/general/screen0/options/active_plugins --type=list --list-type=string "$plugins"
				fi
			fi
		fi
	fi
}

WORD8="Etape 1 : Réglages, corrections et dépôts"
WORD9="Important: \\n\\n1. Si vous n'utilisez pas notre mirroir et ne sélectionnez pas\\nl'option 'Ajouter des dépôts additionnels', vous ne serez \\npas en mesure d'installer certains paquets à l'étape 2. \\n\\n2. Afin que certains paramètres soient pris en compte, vous devrez vous déconnecter et \\nvous reconnecter de votre session (mais seulement après que les étapes 1 et 2 soient \\nterminées!).\\n\\n3. Choisir \"Reset\" remettra à zéro cette option si vous l'aviez utilisée avant. Ne pas \\nchoisir à la fois un réglage et son option de remise à zéro! \\n\\nChoisir:"
WORD10="Sélectionné"
WORD11="Améliorations"
WORD12="Déplacer les boutons de la fenêtres à droite (Affichage classique)"
WORD13=">> Reset: \"Déplacer les boutons de la fenêtres à droite\""
WORD14="Changer le comportement du Gestionnaire de Mises à jour à la manière de Jaunty (auto launch)"
WORD15=">> Reset: \"Changer le comportement du Gestionnaire de Mises à jour à la manière de Jaunty\""
WORD16="Supprimer les icônes des lecteurs montés sur le Bureau"
WORD17=">> Reset: \"Supprimer les icônes des lecteurs montés sur le Bureau\""
WORD18="Désactiver le son de connexion de LightDM (LightDM = écran de connexion)"
WORD19=">> Reset: \"Désactiver le son de connexion de LightDM\""
WORD20="Activer les icônes dans les menus et les boutons"
WORD21=">> Reset: \"Activer les icônes dans les menus et les boutons\""
WORD26="Enlever le paquet ubuntu-docs (libération de 252Mo)"
WORD27=">> Reset \"Enlever le paquet ubuntu-docs (libération de 252Mo)\""
WORD30="Corrige la lenteur de 'apt-get update' pour les dépôts de Google"
WORD31=">> Reset: \"Corrige la lenteur de 'apt-get update' pour les dépôts de Google\""
WORD34="Ajouter des dépôts additionnels (PPA de Cairo-Dock, Matttbe, LaTeXila et Ubuntu-Tweak) SI VOUS N'UTILISEZ PAS NOTRE MIRROIR"
WORD39="Ajouter notre miroir (32 and 64bits only)"
WORD40="Télécharger un centre de logiciels dédié aux jeux"
WORD41="Défilement des messages du terminal sans limite"
WORD41BIS=">> Reset: \"Défilement des messages du terminal sans limite\""
WORD44="Défilement de la souris à deux doigts"
WORD45=">> Reset: \"Défilement de la souris à deux doigts\""
WORD46="Désactiver les propositions d'achat dans le dash Unity"
WORD47=">> Reset: \"Désactiver les propositions d'achat dans le dash Unity\""


function test_mirror () {
	wget $MIRROR_ADDR -O /dev/null > /dev/null 2>&1
	if [ $? -eq 0 ]; then
		echo "TRUE"
	else
		echo "FALSE"
	fi
}
if [ "$DISTRIB" = "precise" ]; then
	WITH_MIRROR=`test_mirror`
fi

#gui 1
choicess=`/usr/bin/zenity --title="$WORD8" --width=600 --height=600 \
				--text="$WORD9" \
				--list --column="$WORD10" --column="$WORD11" \
				--checklist FALSE "$WORD12" FALSE "$WORD13" FALSE "$WORD14" FALSE "$WORD15" FALSE "$WORD16" FALSE "$WORD17" FALSE "$WORD18" FALSE "$WORD19" TRUE "$WORD20" FALSE "$WORD21" FALSE "$WORD26" FALSE "$WORD27" TRUE "$WORD30" FALSE "$WORD31" FALSE "$WORD34" $MIRROR_GOOD_DISTRIB "$WORD39" FALSE "$WORD40" TRUE "$WORD41" FALSE "$WORD41BIS" TRUE "$WORD44" FALSE "$WORD45" TRUE "$WORD46" FALSE "$WORD47"`

if [ 0 -eq 0 ]; ## it seems there is a bug with the default version of precise... no matter, it's just that no warning is printed
then
	IFS="|"
	for choicee in $choicess
	do
		if [ "$choicee" = "$WORD12" ];
			then
			sudo -u $ON_USER "DBUS_SESSION_BUS_ADDRESS="$DBUS_SESSION_BUS_ADDRESS gconftool-2 --type string --set /apps/metacity/general/button_layout "menu:minimize,maximize,close"
			sudo -u $ON_USER "DBUS_SESSION_BUS_ADDRESS="$DBUS_SESSION_BUS_ADDRESS gsettings set org.gnome.desktop.wm.preferences "menu:minimize,maximize,close"
		elif [ "$choicee" = "$WORD13" ];
			then
			sudo -u $ON_USER "DBUS_SESSION_BUS_ADDRESS="$DBUS_SESSION_BUS_ADDRESS gconftool-2 --type string --set /apps/metacity/general/button_layout "close,minimize,maximize:"
			sudo -u $ON_USER "DBUS_SESSION_BUS_ADDRESS="$DBUS_SESSION_BUS_ADDRESS gsettings set org.gnome.desktop.wm.preferences "close,minimize,maximize:"
		elif [ "$choicee" = "$WORD14" ];
			then
			sudo -u $ON_USER "DBUS_SESSION_BUS_ADDRESS="$DBUS_SESSION_BUS_ADDRESS gconftool -s --type bool /apps/update-notifier/auto_launch false
		elif [ "$choicee" = "$WORD15" ];
			then
			sudo -u $ON_USER "DBUS_SESSION_BUS_ADDRESS="$DBUS_SESSION_BUS_ADDRESS gconftool -s --type bool /apps/update-notifier/auto_launch true
		elif [ "$choicee" = "$WORD16" ];
			then
			sudo -u $ON_USER "DBUS_SESSION_BUS_ADDRESS="$DBUS_SESSION_BUS_ADDRESS gconftool -s --type bool /apps/nautilus/desktop/volumes_visible false
			sudo -u $ON_USER "DBUS_SESSION_BUS_ADDRESS="$DBUS_SESSION_BUS_ADDRESS gsettings set org.gnome.nautilus.desktop volumes-visible false
		elif [ "$choicee" = "$WORD17" ];
			then
			sudo -u $ON_USER "DBUS_SESSION_BUS_ADDRESS="$DBUS_SESSION_BUS_ADDRESS gconftool -s --type bool /apps/nautilus/desktop/volumes_visible true
			sudo -u $ON_USER "DBUS_SESSION_BUS_ADDRESS="$DBUS_SESSION_BUS_ADDRESS gsettings set org.gnome.nautilus.desktop volumes-visible true
		elif [ "$choicee" = "$WORD18" ];
			then
			sudo -u lightdm gconftool-2 --set /desktop/gnome/sound/event_sounds --type bool false
			sudo -u $ON_USER "DBUS_SESSION_BUS_ADDRESS="$DBUS_SESSION_BUS_ADDRESS gconftool-2 --set /desktop/gnome/sound/event_sounds --type bool false
		elif [ "$choicee" = "$WORD19" ];
			then
			sudo -u lightdm gconftool-2 --set /desktop/gnome/sound/event_sounds --type bool true
			sudo -u $ON_USER "DBUS_SESSION_BUS_ADDRESS="$DBUS_SESSION_BUS_ADDRESS gconftool-2 --set /desktop/gnome/sound/event_sounds --type bool true
		elif [ "$choicee" = "$WORD20" ];
			then
			sudo -u $ON_USER "DBUS_SESSION_BUS_ADDRESS="$DBUS_SESSION_BUS_ADDRESS gconftool-2 --set /desktop/gnome/interface/buttons_have_icons --type bool true
			sudo -u $ON_USER "DBUS_SESSION_BUS_ADDRESS="$DBUS_SESSION_BUS_ADDRESS gconftool-2 --set /desktop/gnome/interface/menus_have_icons --type bool true
			sudo -u $ON_USER "DBUS_SESSION_BUS_ADDRESS="$DBUS_SESSION_BUS_ADDRESS gsettings set org.gnome.desktop.interface buttons-have-icons true
			sudo -u $ON_USER "DBUS_SESSION_BUS_ADDRESS="$DBUS_SESSION_BUS_ADDRESS gsettings set org.gnome.desktop.interface menus-have-icons true
		elif [ "$choicee" = "$WORD21" ];
			then
			sudo -u $ON_USER "DBUS_SESSION_BUS_ADDRESS="$DBUS_SESSION_BUS_ADDRESS gconftool-2 --set /desktop/gnome/interface/buttons_have_icons --type bool false
			sudo -u $ON_USER "DBUS_SESSION_BUS_ADDRESS="$DBUS_SESSION_BUS_ADDRESS gconftool-2 --set /desktop/gnome/interface/menus_have_icons --type bool false
			sudo -u $ON_USER "DBUS_SESSION_BUS_ADDRESS="$DBUS_SESSION_BUS_ADDRESS gsettings set org.gnome.desktop.interface buttons-have-icons false
			sudo -u $ON_USER "DBUS_SESSION_BUS_ADDRESS="$DBUS_SESSION_BUS_ADDRESS gsettings set org.gnome.desktop.interface menus-have-icons false
		elif [ "$choicee" = "$WORD26" ];
			then
			sudo apt-get purge -y --force-yes ubuntu-docs
		elif [ "$choicee" = "$WORD27" ];
			then
			sudo apt-get -y --force-yes install ubuntu-docs
		elif [ "$choicee" = "$WORD30" ];
			then
			echo "Acquire::http::Pipeline-Depth \"0\";" | sudo tee -a /etc/apt/apt.conf.d/90localsettings > /dev/null
		elif [ "$choicee" = "$WORD31" ];
			then
			sudo rm /etc/apt/apt.conf.d/90localsettings_back > /dev/null 2>&1; sudo cp /etc/apt/apt.conf.d/90localsettings /etc/apt/apt.conf.d/90localsettings_back; cat /etc/apt/apt.conf.d/90localsettings_back | sudo sed -e '/^Acquire::http::Pipeline-Depth.*/d' > /etc/apt/apt.conf.d/90localsettings; sudo rm /etc/apt/apt.conf.d/90localsettings_back > /dev/null 2>&1;
		elif [ "$choicee" = "$WORD34" ];
			then
			testConnection
			sudo rm /etc/apt/sources.list_backup > /dev/null 2>&1;
			sudo cp /etc/apt/sources.list /etc/apt/sources.list_backup

			ARRAY=( "deb http://archive.canonical.com/ubuntu $DISTRIB partner ## Canonical" "deb http://ppa.launchpad.net/cairo-dock-team/ppa/ubuntu $DISTRIB main ## Cairo-Dock-PPA" "deb http://ppa.launchpad.net/matttbe/ppa/ubuntu $DISTRIB main ## Matttbe" "deb http://download.videolan.org/pub/debian/stable / ## dvdcss")

			ELEMENTS=${#ARRAY[@]}
			for (( i=0;i<$ELEMENTS;i++));
			do
				AddMeApt "${ARRAY[${i}]}"
			done
			testConnection
			sudo apt-get update
		elif [ "$choicee" = "$WORD39" ];
			then
			OurMirror "up"
			apt-get update
			MIRROR="yes"
		elif [ "$choicee" = "$WORD40" ];
			then
			sudo -u $ON_USER mkdir /home/$ON_USER/Jeux
			cd /home/$ON_USER/Jeux
			sudo -u $ON_USER wget http://www.lastos.org/team/LastOS/mgp/release/lastos-mgp-1.0.0-11.tar.gz
			sudo -u $ON_USER tar xzf lastos-mgp-1.0.0-11.tar.gz
			sudo -u sed -i "/desktop/d" install # pas besoin de son raccourcis qui se place sur un dossier inexistant sans les permissions.
			sudo ./install
			cd $DIR
		elif [ "$choicee" = "$WORD41" ];
			then # gnome-terminal is still using GConf
			sudo -u $ON_USER "DBUS_SESSION_BUS_ADDRESS="$DBUS_SESSION_BUS_ADDRESS gconftool-2 -s '/apps/gnome-terminal/profiles/Default/scrollback_unlimited' --type bool true
		elif [ "$choicee" = "$WORD41BIS" ];
			then
			sudo -u $ON_USER "DBUS_SESSION_BUS_ADDRESS="$DBUS_SESSION_BUS_ADDRESS gconftool-2 -s '/apps/gnome-terminal/profiles/Default/scrollback_unlimited' --type bool false # (défilement)
		elif [ "$choicee" = "$WORD44" ];
			then
			sudo -u $ON_USER "DBUS_SESSION_BUS_ADDRESS="$DBUS_SESSION_BUS_ADDRESS gsettings set org.gnome.settings-daemon.peripherals.touchpad scroll-method two-finger-scrolling
			sudo -u $ON_USER "DBUS_SESSION_BUS_ADDRESS="$DBUS_SESSION_BUS_ADDRESS gsettings set org.gnome.settings-daemon.peripherals.touchpad horiz-scroll-enabled true
		elif [ "$choicee" = "$WORD45" ];
			then
			sudo -u $ON_USER "DBUS_SESSION_BUS_ADDRESS="$DBUS_SESSION_BUS_ADDRESS gsettings set org.gnome.settings-daemon.peripherals.touchpad scroll-method edge-scrolling
			sudo -u $ON_USER "DBUS_SESSION_BUS_ADDRESS="$DBUS_SESSION_BUS_ADDRESS gsettings set org.gnome.settings-daemon.peripherals.touchpad horiz-scroll-enabled false
		elif [ "$choicee" = "$WORD46" ];
			then
			sudo -u $ON_USER "DBUS_SESSION_BUS_ADDRESS="$DBUS_SESSION_BUS_ADDRESS gsettings set com.canonical.Unity.Lenses disabled-scopes "['more_suggestions-amazon.scope', 'more_suggestions-u1ms.scope', 'more_suggestions-populartracks.scope', 'music-musicstore.scope', 'more_suggestions-ebay.scope', 'more_suggestions-ubuntushop.scope', 'more_suggestions-skimlinks.scope']"
		elif [ "$choicee" = "$WORD47" ];
			then
			sudo -u $ON_USER "DBUS_SESSION_BUS_ADDRESS="$DBUS_SESSION_BUS_ADDRESS gsettings set com.canonical.Unity.Lenses disabled-scopes "[]"
		fi
	done
	sudo -u $ON_USER "DBUS_SESSION_BUS_ADDRESS="$DBUS_SESSION_BUS_ADDRESS gsettings-data-convert
	IFS=""
	echo "Fait! L'étape 2 va commencer!"
else
	echo cancel selected
fi

#gui 2
choices=`/usr/bin/zenity --title="Etape 2: installation des paquets" --width=800 --height=600 --text="Choisissez les paquets à installer:" --list --column="Sélectionné" --column="Paquet" --column="Description" --checklist TRUE "Cairo-Dock" "Un environnement et une barre des tâches (dock) sympa et pratique" FALSE "Cairo-Dock Weekly" "Un environnement et une barre des tâches sympa et pratique (Weekly version)" FALSE "Chromium Browser" "Navigateur open source" FALSE "Thèmes supplémentaires" "Installation des thèmes de community and Bisigi" FALSE "Evolution" "Client E-mail" FALSE "Dropbox" "Application qui synchronise un dossier avec des serveurs sur le cloud (Gratuit, 2Go)" FALSE "Google Earth" "Google Earth vous permet de voyager partout sur Terre" FALSE "Outils de développement" "De build-essential à Subversion, GIT et autres" FALSE "Outils de packaging Debian-Ubuntu" "Pour la construction de paquets et développement pour Debian et Ubuntu" FALSE "Emesene" "MSN client" FALSE "Pidgin" "Client de messageries instantanées" TRUE "Inkscape" "Editeur d'images vectorielles" TRUE "Gimp" "Editeur complet d'images bitmap" FALSE "LaTeX" "LaTeX (binaires, modules et éditeur)" FALSE "aMule" "eMule" FALSE "Eclipse" "L'éditeur pour développeur par IBM" TRUE "Misc" "Quelques utilitaires (convertir du texte, de la musique, renommer plusieurs fichiers, etc.)" TRUE "Environnement de bureau Gnome" "Gnome-Shell et le Gnome-Panel" FALSE "Wine" "Lancer des applications Windows sous Linux" TRUE "VLC" "Lecteur de vidéos" TRUE "MPlayer" "Lecteur de vidéos (MPlayer GUI)" TRUE "Codecs et extras" "Codecs (multimedia, java, flash), support d'archives supplémentaires, support DVD et fonts" TRUE "Ubuntu-Tweak" "Outil d'amélioration d'Ubuntu et plein de dépôts additionnels (PPAs) (Attention, beta)" TRUE "CCSM et extra plugins" "CompizConfig Settings Manager et extra plugins" FALSE "Skype" "Application VoIP chat" TRUE "OpenShot" "Éditeur de vidéo simple et puissant" FALSE "Audacity" "Éditeur audio simple et puissant" FALSE "Blender" "Logiciel complet et puissant de création de vidéos animée" TRUE "Google Talk plugin" "Plugin Google Talk pour le navigateur (audio et vidéo chat dans GMail et Google Plus)" TRUE "Economie d'énergie" "Deux outils (powertop et jupiter) pour la gestion de l'énergie des ordinateurs portables" FALSE "GThumb" "Visionneur d'image rapide avec plusieurs options intéressantes" FALSE "EasyTag" "Éditeur performant de tags pour les fichiers audio" FALSE "Gobby" "Editeur de texte collaboratif (édition à plusieurs en même temps)" FALSE "Hugin" "Créateur de panorama à partir de plusieurs photos" FALSE "FileZilla" "Client FTP réputé" TRUE "Synapse" "Recherche rapide d'un peu de tout" FALSE "EasyStroke" "Contrôle du bureau avec des mouvements de souris" FALSE "ZRam" "Utiliser ZRam (compression de la mémoire ram peu utilisée): très conseillé pour les PCs avec 2 Go de Ram et moins)" FALSE "Steam" "Installer Steam (jeux vidéos propriétaires)"`

packagesInst=""
if [ $? -eq 0 ]
then
	IFS="|"
	testConnection
	/usr/bin/zenity --info --text="Le téléchargement et l'installation des paquets va commencer. Merci de ne pas redémarrer votre ordinateur tant que le script n'a pas terminé! " &
	if [ "$choices" = "" ]; then
		echo "Opération annulée"
		sleep 1
		exit 1
	fi
	for choice in $choices
	do
		if [ "$choice" = "Cairo-Dock" ];
			then
				if [ "$MIRROR" != "yes" ]; then
					AddMeApt "deb http://ppa.launchpad.net/cairo-dock-team/ppa/ubuntu $DISTRIB main ## Cairo-Dock-PPA"
				fi
				packagesInst="$packagesInst cairo-dock cairo-dock-plug-ins "
		elif [ "$choice" = "Cairo-Dock Weekly" ];
			then
				AddMeApt "deb http://ppa.launchpad.net/cairo-dock-team/weekly/ubuntu $DISTRIB main ## Cairo-Dock-PPA-Weekly"
				packagesInst="$packagesInst cairo-dock cairo-dock-plug-ins "
		elif [ "$choice" = "Chromium Browser" ];
			then
				packagesInst="$packagesInst chromium-browser chromium-browser-l10n pepperflashplugin-nonfree "
				PEPPER="1"
		elif [ "$choice" = "Thèmes supplémentaires" ];
			then
				packagesInst="$packagesInst elementary-icon-theme suru-icon-theme " # TODO: add more themes
		elif [ "$choice" = "Google Earth" ];
			then
				sudo echo googleearth shared/accepted-googleearth-eula select true | sudo /usr/bin/debconf-set-selections
				AddMeApt "deb http://dl.google.com/linux/earth/deb/ stable main ## Google Repo"
				packagesInst="$packagesInst googleearth googleearth-data "
		elif [ "$choice" = "Google Talk plugin" ];
			then
				GT_LIST="/etc/apt/sources.list.d/google-talkplugin.list"
				sudo rm -f $GT_LIST
				sudo touch $GT_LIST
				echo "### THIS FILE IS AUTOMATICALLY CONFIGURED ###" | sudo tee -a $GT_LIST > /dev/null
				echo "# You may comment out this entry, but any other modifications may be lost." | sudo tee -a $GT_LIST > /dev/null
				echo "deb http://dl.google.com/linux/talkplugin/deb/ stable main" | sudo tee -a $GT_LIST > /dev/null
				packagesInst="$packagesInst google-talkplugin "
				# Or download and install: https://dl.google.com/linux/direct/google-talkplugin_current_i386.deb or https://dl.google.com/linux/direct/google-talkplugin_current_amd64.deb
		elif [ "$choice" = "Outils de développement" ];
			then
				packagesInst="$packagesInst build-essential automake make patch dpatch patchutils autotools-dev cmake libtool autoconf git gitg meld subversion bzr mercurial geany geany-plugins colordiff vim zsh gdb valgrind nemiver d-feet devhelp "
		elif [ "$choice" = "Outils de packaging Debian-Ubuntu" ];
			then
				packagesInst="$packagesInst debhelper pbuilder cdbs quilt fakeroot xutils lintian dh-make ubuntu-dev-tools "
		elif [ "$choice" = "Dropbox" ];
			then
				# echo "deb http://linux.dropbox.com/ubuntu $DISTRIB main" > /home/$ON_USER/dropbox.list
				# sudo mv /home/$ON_USER/dropbox.list /etc/apt/sources.list.d/dropbox.list
				packagesInst="$packagesInst dropbox nautilus-dropbox "
		elif [ "$choice" = "LaTeX" ];
			then
				packagesInst="$packagesInst texlive dvipdfmx lmodern perl-tk texlive-latex-extra latex-beamer latex-xcolor texlive-science texlive-generic-extra texlive-fonts-recommended texlive-pictures texmaker latexila rubber chktex pstoedit python-poppler gedit-latex-plugin texlive-lang-french latexila "
				LATEX_DOC_REMOVE=`zenity --title="LaTeX" --text="Voulez-vous enlever les paquets contenant la doc (généralement inutiles, grand gain de place)" --list --column="Choix" --column="" --radiolist TRUE "Oui" FALSE "Non"`
		elif [ "$choice" = "VLC" ];
			then
				packagesInst="$packagesInst vlc-plugin-notify vlc-plugin-pulse "
		elif [ "$choice" = "Codecs et extras" ];
			then
				sudo echo ttf-mscorefonts-installer msttcorefonts/accepted-mscorefonts-eula select true | sudo /usr/bin/debconf-set-selections
				packagesInst="$packagesInst ubuntu-restricted-addons ubuntu-restricted-extras libdvdnav4 libdvdread4 libdvdcss2 rar unrar p7zip-full p7zip-rar unace ttf-mscorefonts-installer ttf-liberation mencoder adobe-flashplugin "
		elif [ "$choice" = "Ubuntu-Tweak" ];
			then
				if [ "$MIRROR" != "yes" ]; then
					AddMeApt "deb http://ppa.launchpad.net/tualatrix/ppa/ubuntu $DISTRIB main ## Ubuntu-Tweak Next"
				fi
				packagesInst="$packagesInst ubuntu-tweak "
		elif [ "$choice" = "CCSM et extra plugins" ];
			then
				packagesInst="$packagesInst compizconfig-settings-manager compiz-fusion-plugins-extra compiz-fusion-plugins-main compiz-plugins compiz-plugins-default compiz-plugins-extra compiz-plugins-main compiz-plugins-main-default "
		elif [ "$choice" = "Skype" ];
			then
				packagesInst="$packagesInst skype"
				if [ $(uname -i) = 'x86_64' ]; then ## Workaround Skype theme and systray
					packagesInst="$packagesInst gtk2-engines-murrine:i386 gtk2-engines-pixbuf:i386 sni-qt:i386"
				fi
		elif [ "$choice" = "Misc" ];
			then
				packagesInst="$packagesInst ntfs-3g soundconverter trickle nautilus-open-terminal nautilus-image-manipulator nautilus-image-converter xournal cheese frozen-bubble winff parcellite gedit-plugins pyrenamer hardinfo libnotify-bin sl ffmpeg libav-tools pdfshuffler dconf-tools gconf-editor htop powertop gtk-redshift "
				if [ "`echo $LANG |cut -d_ -f1`" = "fr" ]; then
					packagesInst="$packagesInst libreoffice-l10n-fr language-pack-gnome-fr language-support-writing-fr aspell-fr "
				fi
		elif [ "$choice" = "Economie d'énergie" ];
			then
				if [ "$MIRROR" != "yes" ]; then
					AddMeApt "deb http://ppa.launchpad.net/webupd8team/jupiter/ubuntu $DISTRIB main ## Jupiter"
				fi
				packagesInst="$packagesInst powertop jupiter "
				# TODO: for Ubuntu 13.04 Raring: jupiter no more needed
		elif [ "$choice" = "ZRam" ]; ## TODO Ubuntu 13: utiliser zram des dépôts
			then
				AddMeApt "deb http://ppa.launchpad.net/shnatsel/zram/ubuntu $DISTRIB main ## ZRam"
				packagesInst="$packagesInst zramswap-enabler "
		elif [ "$choice" = "Steam" ]; ## TODO Ubuntu 13: check dépôt + install, que pour precise??
			then
				if [ $(uname -i) = 'i386' ]; then
					wget http://repo.steampowered.com/steam/archive/precise/steam_latest.deb
				elif [ $(uname -i) = 'x86_64' ]; then
					wget http://repo.steampowered.com/steam/archive/precise/steam_latest.deb
				fi
				INSTALL_STEAM="steam_latest.deb"
		elif [ "$choice" = "Environnement de bureau Gnome" ];
			then
				packagesInst="$packagesInst gnome-panel gnome-shell gnome-tweak-tool "
				custom_gnome_shell
				# apt-cache search gnome-shell-extension | awk '{ print $1 }' | xargs
		else
				choiceLOW=`echo $choice | tr '[:upper:]' '[:lower:]'`
				packagesInst="$packagesInst $choiceLOW "
		fi
	done


	##################
	## Installation ##
	##################

	testConnection # connexion
	testKeyServer	# keys

	# removed cdrom
	sudo sed -i 's/^deb cdrom/# deb cdrom/g' /etc/apt/sources.list
	sudo apt-get update

	# Upgrade
	echo -e "\n\t ====== Dist Upgrade ======\n"
	sudo apt-get dist-upgrade -y --force-yes || (bPostInstFailed=1 && echo "ERROR")

	# Script vérification
	echo -e "\n\t ====== Packages verification and installation! =======\n"

	# WORKAROUND ia32-libs
	if test `echo "$packagesInst"| grep -c ia32-libs` -gt 0; then
		echo -e "\n\t====== WORKAROUND ia32-libs =======\n"
		sudo apt-get install -y --force-yes -m ia32-libs
	fi

	mkdir -p /tmp/matttbe/
	echo -e '# on ajoute que les paquets qui manquent
	echo "\t on ajoute que les paquets qui manquent"
	unset $paquetsPresent
	for testPkg in '"$packagesInst"'; do
		dpkg -s $testPkg |grep installed |grep "install ok" > /dev/null	
		if [ $? -eq 1 ]; then
			paquetsPresent="$paquetsPresent $testPkg"
		fi
	done
	# on vérifie la présence des paquets :
	unset $paquetsOK
	unset $paquetsNOTok
	echo "\t on vérifie la présence des paquets"
	for testPkg in $paquetsPresent; do
		sudo apt-get install -s $testPkg > /dev/null 2>&1
		if [ $? -eq 0 ]; then
			paquetsOK="$paquetsOK $testPkg"
			echo "$testPkg est un paquet disponible"
		else
			paquetsNOTok="$paquetsNOTok $testPkg"
			echo "==== $testPkg est introuvable sur les dépôts ===="
		fi
	done
	## Une fois la liste vérifiée, on écrase le fichier avec la commande minimale pour la suite
	echo "sudo apt-get install -y --force-yes -m $paquetsOK || exit 1
	# Paquets mauvais: $paquetsNOTok" > /tmp/matttbe/install_packages.sh
	#sudo apt-get install -y --force-yes -m $paquetsOK' > /tmp/matttbe/check_packages.sh
	chmod +x /tmp/matttbe/check_packages.sh
	# sudo xterm -e "sudo sh /home/$ON_USER/install_paquets.sh"	# check packages
	sudo sh /tmp/matttbe/check_packages.sh # check packages
	chmod +x /tmp/matttbe/install_packages.sh
	sudo sh /tmp/matttbe/install_packages.sh || (bPostInstFailed=1 && echo "ERROR INSTALL" && sudo cp /tmp/*.sh .)


	sudo apt-get install -f -y || (bPostInstFailed=1 && echo "ERROR: install empty")


	##################
	## POST Install ##
	##################

	if test -e "/usr/share/doc/libdvdread4/install-css.sh"; then
		sudo /usr/share/doc/libdvdread4/install-css.sh	#dvd
	fi
# Steam
	if test -n "$INSTALL_STEAM" -a -f "$INSTALL_STEAM"; then
		echo "Install STEAM"
		sudo dpkg -i "$INSTALL_STEAM"
		sudo apt-get install -fy
		rm "$INSTALL_STEAM"
	fi

	if [ "$LATEX_DOC_REMOVE" = "Oui" ]; then # CLEAN
		packageToRemove=""
		for i in "texlive-latex-extra-doc texlive-science-doc texlive-fonts-recommended-doc texlive-pictures-doc"; do
			if test -d /usr/share/doc/$i; then
				packageToRemove="$packageToRemove $i "
			fi
		done
		if [ "$packageToRemove" != "" ]; then
			sudo apt-get purge -y --force-yes $packageToRemove || (bPostInstFailed=1 && echo "ERROR purge: $packageToRemove")
		fi
	fi
	if [ "$PEPPER" = "1" ]; then
		sudo update-pepperflashplugin-nonfree --install
	fi
	fi

	###########
	## CLEAN ##
	###########

	sudo apt-get clean || (bPostInstFailed=1 && echo "ERROR clean")
	sudo apt-get autoclean || (bPostInstFailed=1 && echo "ERROR autoclean")
	sudo apt-get autoremove -y || (bPostInstFailed=1 && echo "ERROR autoremove")
	if [ "$MIRROR" = "yes" ]; then
		OurMirror "down"
		echo "Utilisation des serveurs externes"
		sudo apt-get update
	fi

	###################
	## Notifications ##
	###################

	lang=${LANG%_*}
	text="Installation terminée, merci d'avoir utilisé ce script"
	(mplayer "http://translate.google.com/translate_tts?ie=UTF-8&tl=${lang}&q=${text}" &> /dev/null &)
	if [ "$bPostInstFailed" = "1" ]; then
		/usr/bin/zenity --error --text="Installation terminée, ERREUR détectée!"
	else
		/usr/bin/zenity --info --text="Installation terminée, merci d'avoir utilisé ce script!"
	fi
	IFS=""
	sl	# train
	rm /tmp/testinternet > /dev/null 2>&1;
	if [ "$WEBPAGE_END" != "" ]; then xdg-open "$WEBPAGE_END" ; fi
else
	rm /tmp/testinternet > /dev/null 2>&1;
	echo cancel selected
	exit
fi
